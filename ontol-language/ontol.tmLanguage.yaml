# [PackageDev] target_format: json, ext: json
---
name: ONTOL
scopeName: source.ontol
fileTypes: ['on']
uuid: 4fc14b00-3ee2-4804-9036-e70090594121

patterns:
  - comment: use declaration
    name: keyword.import.ontol
    match: ^(use)\s

  - comment: use as declaration
    name: keyword.import.as.ontol
    match: \s(as)\s

  - comment: def declaration
    match: ^(def)(\s?\((private|open)\))?
    captures:
      '1': {name: keyword.declaration.def.ontol}
      '2': {}
      '3': {name: variable.parameter.ontol}

  - comment: rel declaration
    name: keyword.declaration.rel.ontol
    match: \b(rel)\b

  - comment: fmt expression
    name: keyword.declaration.fmt.ontol
    match: \b(fmt)\b

  - comment: fat arrow (fmt expression)
    name: keyword.operator.fatarrow.ontol
    match: (=>)

  - comment: map declaration
    match: ^(map)(\s(\w+))?
    captures:
      '1': {name: keyword.declaration.map.ontol}
      '2': {}
      '3': {name: variable.ontol}

  - comment: map match matcher
    name: variable.parameter.ontol
    match: \s(match)\s

  - comment: built-in defs
    name: storage.type.ontol
    match: \b(boolean|number|integer|i64|float|f64|text|datetime|date|time|uuid|regex|seq|dict|fn)\b

  - comment: built-in constant value
    name: constant.language.ontol
    match: \b(true|false|inf|nan|\(\)|\[\])\b

  - comment: built-in rel props
    name: variable.function.ontol
    match: \b(is|id|gen|default|example)\b

  - comment: built-in generators
    name: entity.name.function.ontol
    match: \b(auto|create_time|update_time)\b

  - comment: numeric literal
    name: constant.numeric.ontol
    match: \b\-?(\d+(\.?\d+)?)\b

  - comment: spread operator
    name: keyword.operator.spread.ontol
    match: \.\.

  - comment: subject/self dot
    name: variable.language.ontol
    match: \s(\.)

  - comment: sigil
    name: keyword.operator.sigil.ontol
    match: '[.,:?+*=|]+'

  - comment: special case sigil
    name: keyword.operator.ontol
    match: (?:[^\w\s])([_-]+)(?:[^\w\s])

  - comment: single quoted string literal
    name: string.quoted.single.ontol
    begin: \'
    end: \'
    patterns:
      - include: '#escaped_char'

  - comment: double quoted string literal
    name: string.quoted.double.ontol
    begin: \"
    end: \"
    patterns:
      - include: '#escaped_char'

  - comment: regex literal
    name: string.regexp.ontol
    begin: \s/[^/\s]
    end: '[^\\]/'
    patterns:
      - include: source.regexp
      - include: '#escaped_char'

  - comment: comment
    name: comment.line.double-slash.ontol
    begin: //[^/]
    end: $

  - comment: doc comment
    name: comment.block.documentation.ontol
    begin: ^\s*+///
    end: $
    patterns:
      - include: text.html.markdown#inline

repository:
  escaped_char:
    patterns:
    - name: constant.character.escape.backslash.ontol
      match: \\\\
    - name: constant.character.escape.slash.ontol
      match: \\/
    - name: constant.character.escape.single-quote.ontol
      match: \\'
    - name: constant.character.escape.double-quote.ontol
      match: \\"
    - name: constant.character.escape.backspace.ontol
      match: \\b
    - name: constant.character.escape.formfeed.ontol
      match: \\f
    - name: constant.character.escape.newline.ontol
      match: \\n
    - name: constant.character.escape.carriagereturn.ontol
      match: \\c|\\r
    - name: constant.character.escape.linefeed.ontol
      match: \\l
    - name: constant.character.escape.tabulator.ontol
      match: \\t
