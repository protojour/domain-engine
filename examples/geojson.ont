// TODO: domain-private types?
type position
rel position [0..2] int

type position-list
rel position-list [..2] position
rel position-list [2..] position

type position-ring
rel position-ring [..4] position
rel position-ring [4..] position

type Geometry
type LeafGeometry

type Point
rel Point ['type'] 'Point'
rel Point ['coordinates'] position

type MultiPoint
rel MultiPoint ['type'] 'MultiPoint'
rel MultiPoint ['coordinates'*] position

type LineString
rel LineString ['type'] 'LineString'
rel LineString ['coordinates'] position-list

type MultiLineString
rel MultiLineString ['type'] 'MultiLineString'
rel MultiLineString ['coordinates'*] position-list

type Polygon {
    rel ['type'] 'Polygon'
    rel ['coordinates'] position-ring
}

type MultiPolygon {
    rel ['type'] 'MultiPolygon'
    rel ['coordinates'*] position-ring
}

type GeometryCollection
rel GeometryCollection ['type'] 'GeometryCollection'
rel GeometryCollection ['geometries'*] LeafGeometry

rel . [Point] LeafGeometry
rel . [MultiPoint] LeafGeometry
rel . [LineString] LeafGeometry
rel . [MultiLineString] LeafGeometry
rel . [Polygon] LeafGeometry
rel . [MultiPolygon] LeafGeometry

// Note: Geometry is an extension of LeafGeometry + GeometryCollection
rel . [Point] Geometry
rel . [MultiPoint] Geometry
rel . [LineString] Geometry
rel . [MultiLineString] Geometry
rel . [Polygon] Geometry
rel . [MultiPolygon] Geometry
rel . [GeometryCollection] Geometry

type GeometryOrNull
rel . [Geometry] GeometryOrNull
// TODO: Not supported yet (union tree):
// rel . [.] GeometryOrNull

type Feature
rel Feature ['type'] 'Feature'
rel Feature ['geometry'] GeometryOrNull

// FIXME: Features is a map of 'anything'.
// This could be a good use case for generics in ONTOL.
rel Feature ['properties'] .

type FeatureCollection
rel FeatureCollection ['type'] 'FeatureCollection'
rel FeatureCollection ['features'*] Feature
