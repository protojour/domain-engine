// TODO: domain-private types?
type position
rel position [0..2] int

type position-list
rel position-list [..2] position
rel position-list [2..] position

type position-ring
rel position-ring [..4] position
rel position-ring [4..] position

pub type Geometry
pub type LeafGeometry

pub type Point
rel Point ['type'] 'Point'
rel Point ['coordinates'] position

pub type MultiPoint
rel MultiPoint ['type'] 'MultiPoint'
rel MultiPoint ['coordinates'*] position

pub type LineString
rel LineString ['type'] 'LineString'
rel LineString ['coordinates'] position-list

pub type MultiLineString
rel MultiLineString ['type'] 'MultiLineString'
rel MultiLineString ['coordinates'*] position-list

pub type Polygon {
    rel _ ['type'] 'Polygon'
    rel _ ['coordinates'] position-ring
}

pub type MultiPolygon {
    rel _ ['type'] 'MultiPolygon'
    rel _ ['coordinates'*] position-ring
}

pub type GeometryCollection
rel GeometryCollection ['type'] 'GeometryCollection'
rel GeometryCollection ['geometries'*] LeafGeometry

rel LeafGeometry [or] Point
rel LeafGeometry [or] MultiPoint
rel LeafGeometry [or] LineString
rel LeafGeometry [or] MultiLineString
rel LeafGeometry [or] Polygon
rel LeafGeometry [or] MultiPolygon

// Note: Geometry is an extension of LeafGeometry + GeometryCollection
rel Geometry [or] Point
rel Geometry [or] MultiPoint
rel Geometry [or] LineString
rel Geometry [or] MultiLineString
rel Geometry [or] Polygon
rel Geometry [or] MultiPolygon
rel Geometry [or] GeometryCollection

type GeometryOrNull {
    rel _ [or] Geometry
    // TODO: Not supported yet (union tree):
    // rel _ [or] ()
}

type Feature<properties = ()>
rel Feature<> ['type'] 'Feature'
rel Feature<> ['geometry'] GeometryOrNull

// FIXME: Features is a map of 'anything'.
// This could be a good use case for generics in ONTOL.
rel Feature<properties> ['properties'] ()

type FeatureCollection<properties = ()>
rel FeatureCollection<> ['type'] 'FeatureCollection'
rel FeatureCollection<properties> ['features'*] Feature<properties>
