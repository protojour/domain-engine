/// The workspaces domain models frequently changing code repositories.
domain 01JAP41VG1STK1VZPWXV26SPNM ()

/// A workspace is a version-controlled tree of files associated with an ID.
def Workspace (
    /// The ULID of this workspace
    rel. 'id'[rel* gen: auto]: (rel* is: ulid)

    /// The conflict-free replicated representation of the workspace data
    rel* 'data'[rel* repr: crdt]: WorkspaceData

    rel* 'created_at'[rel* gen: create_time]: datetime
    rel* 'updated_at'[rel* gen: update_time]: datetime

    rel* order[
        rel* 0: 'updated_at'
        rel* direction: descending
    ]: latest_update
)

/// The data making up a workspace.
def WorkspaceData (
    /// The title of the workspace
    /// NOTE: Deprecated. Do not delete it (yet), since subsequent props will change ID, need a solution for that.
    rel* 'title': text

    /// The files that workspace contains
    rel* 'files': {File}
)

/// A file in a workspace.
def File (
    /// The path of the file.
    /// To simulate directories, use forward slashes to introduce hierarchies.
    rel* 'path': /^[\w\.]+(\/[\w\.]+)*$/

    /// the contents of the file
    rel* 'contents': text
)

/// A listing of a workspace without the data
def WorkspaceListing (
    rel* 'id': ulid
    rel* 'created_at': datetime
    rel* 'updated_at': datetime
)

/// Symbols for named orderings
sym { latest_update }

map(
    WorkspaceListing('id': id, 'created_at': ca, 'updated_at': ua),
    @match Workspace('id': id, 'created_at': ca, 'updated_at': ua),
)

map listMostRecentWorkspaces(
    (),
    WorkspaceListing {
        ..@match Workspace(
            order: { latest_update() }
        )
    }
)