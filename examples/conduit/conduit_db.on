pub type user_id { rel .is: uuid }
pub type slug { rel.is: string }
pub type tag { rel.is: string }

pub type User {
    rel .'user_id'(rel .gen: auto)|id: user_id
    rel .'username': string
    rel .'email': string
    rel .'bio'(rel .default := ''): string
    rel .'image'?: string
    rel .'password_hash': string

    // TODO(constraint): User cannot follow itself
    rel .'following'::'followed_by'? [User]
}

pub type Article {
    rel .'id'(rel .gen: auto)|id: { rel .is: uuid }
    // TODO(constraint): slug is unique
    rel .'slug': slug
    rel .'title': string
    rel .'description': string
    rel .'body': string
    rel .'createdAt'(rel .gen: create_time): datetime
    rel .'updatedAt'(rel .gen: update_time): datetime
}

pub type Comment {
    rel .'id'(rel .gen: auto)|id: { rel .is: int }
    rel .'body': string
    rel .'createdAt': datetime
    rel .'updatedAt': datetime
}

pub type TagEntity {
    rel .'tag'(rel .gen: auto)|id: tag
}

rel Article 'written_by'::'wrote_articles'? [User]
rel Article 'favorited_by'::'favorited'? [User]
rel TagEntity 'tags'::'tagged_with'? [Article]
rel Comment 'comment_on'::'has_comments'? [Article]
rel Comment 'written_by'::'wrote_comments'? [User]
