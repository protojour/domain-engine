/// A simple blogging abstraction that uses conduit_db as persistence layer.
domain 01JCF1ZWTPMFWK8C9D42CDDR70 ()

use 'conduit_db' as db

def BlogPost (
    rel. 'post_id': (rel* is: uuid)
    rel* 'name': text
    rel* 'contents': text
    rel* 'written_by': text
    rel* 'tags': {text}
)

map(
    BlogPost(
        'post_id': id,
        'name': title,
        'contents': body,
        'written_by': author,
        'tags': {..tag},
    ),
    @match db.Article(
        'article_id': id,
        'body': body,
        'title': title,
        db.article_authorship.author: db.User(
            'username': author
        ),
        db.tagging.tags: {
            ..db.TagEntity('tag': tag)
        },
    ),
)

map posts(
    (
        'written_by'?: by
    ),
    BlogPost {
        ..@match db.Article(
            db.article_authorship.author: @match db.User(
                'username'?: by
            ),
            order: { db.by_date() }
        )
    }
)
