/// This example shows how to model a hybrid between an entity and and edge.
domain edge_entity ()

sym {
    (src) related_to: (target) with_relationship: (r),
    (target) related_from: (src) with_relationship: (r),
    (r) from: (src),
    (r) to: (target),
}

def foo_id (rel .is: text)
def bar_id (rel .is: text)

def foo (
    rel .'id'|id: foo_id
    rel .related_to: {bar}
)
def bar (
    rel .'id'|id: bar_id
    rel .related_from: {foo}
)

/// This definition is both an entity in its own right and an edge
def edge (
    rel .'id'|id: (rel .is: text)
    rel .from: foo_id
    rel .to: bar_id
)

map foos(
    (),
    foo { ..@match foo() }
)

map edges(
    (),
    edge { ..@match edge() }
)
