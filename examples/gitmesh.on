
def Repository (
    rel. 'id'[rel* gen: auto]: (rel* is: uuid)
    rel* 'handle': text
    rel* 'owner'::'repositories'? RepositoryOwner
    rel* 'origin'?: .
)

def RepositoryOwner (
    rel* is?: User
    rel* is?: Organization
)

def User (
    rel. 'id': (fmt '' => 'user/' => text => .)
    rel* 'email': text
)

def Organization (
    rel. 'id': (fmt '' => 'org/' => text => .)
    rel* 'members'[rel. is: OrganizationMember]::'member_of' {User}
)

def OrganizationMember (
    rel* 'role': text
)

map users(
    (
        'ids'?: { ..id },
        'member_of'?: { ..member_of }
    ),
    User {
        ..@match User(
            'id'?: @in { ..id },
            'member_of'?: Organization (
                'id': @in { ..member_of }
            ),
        ),
    }
)

map organizations(
    (),
    Organization {
        ..@match Organization(),
    }
)

map repositories(
    (),
    Repository {
        ..@match Repository(),
    }
)