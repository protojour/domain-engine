edge ident {
    /// the variable `x`
    (x)
        /// the symbol `a`
        a:
        (y),
    (y) b: (x) c: y
}

//@ grammar=ontol
Ontol
    EdgeStatement
        KwEdge `edge`
        Whitespace
        IdentPath
            Symbol `ident`
        Whitespace
        CurlyOpen `{`
        Whitespace
        EdgeClause
            EdgeVar
                DocComment `/// the variable `x``
                Whitespace
                ParenOpen `(`
                Symbol `x`
                ParenClose `)`
            Whitespace
            EdgeSlot
                DocComment `/// the symbol `a``
                Whitespace
                Symbol `a`
            Colon `:`
            Whitespace
            EdgeVar
                ParenOpen `(`
                Symbol `y`
                ParenClose `)`
        Comma `,`
        Whitespace
        EdgeClause
            EdgeVar
                ParenOpen `(`
                Symbol `y`
                ParenClose `)`
            Whitespace
            EdgeSlot
                Symbol `b`
            Colon `:`
            Whitespace
            EdgeVar
                ParenOpen `(`
                Symbol `x`
                ParenClose `)`
            Whitespace
            EdgeSlot
                Symbol `c`
            Colon `:`
            Whitespace
            EdgeTypeParam
                IdentPath
                    Symbol `y`
        Whitespace
        CurlyClose `}`
    Whitespace
