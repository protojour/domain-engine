// Contains a looping regex with two variations
(struct ($c)
    (prop! $c p@1:0:0
        (regex-seq (@e) def@0:0 ((1 $a)) ((2 $b)))
    )
)

(struct ($d)
    (prop! $d p@2:0:0 (matrix (.. @e $a)))
    (prop! $d p@2:0:1 (matrix (.. @e $b)))
)

|$c| (block
    (let-prop $f ($c p@1:0:0))
    (let-regex-iter $e ((1 $a)) ((2 $b)) def@0:0 $f)
    (struct ($d)
        (prop! $d p@2:0:0
            (make-matrix ($g)
                (for-each $e ($h)
                    (catch (@i)
                        (let-tup? @i ($a $_) $h)
                        (insert $g $a)
                    )
                )
            )
        )
        (prop! $d p@2:0:1
            (make-matrix ($j)
                (for-each $e ($k)
                    (catch (@l)
                        (let-tup? @l ($_ $b) $k)
                        (insert $j $b)
                    )
                )
            )
        )
        (move-rest-attrs $d $c)
    )
)
