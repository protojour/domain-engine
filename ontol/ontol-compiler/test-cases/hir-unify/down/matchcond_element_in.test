(struct ($c)
    (prop $c R:1:0
        (set (.. @e #u $a))
    )
    (prop $c R:1:1
        (set (.. @f #u $b))
    )
)

(set (.. @g #u
    (match-struct ($d)
        (prop $d R:2:0 element-in
            (set
                (.. @e
                    #u
                    (struct ($q)
                        (prop $q R:3:0 $a)
                    )
                )
                (.. @f
                    #u
                    (struct ($r)
                        (prop $r R:3:1 $b)
                    )
                )
            )
        )
    )
))

|$c| (block
    (let-prop-default $e ($c R:1:0) #u)
    (let-prop-default $f ($c R:1:1) #u)
    (match-struct ($s)
        (let-cond-var $d $s)
        (push-cond-clauses $s
            (root '$d)
        )
        (let-cond-var $t $s)
        (push-cond-clauses $s
            (match-prop '$d R:2:0 element-in '$t)
        )
        (for-each $e ($_ $a)
            (let-cond-var $q $s)
            (push-cond-clauses $s
                (member '$t (_ '$q))
            )
            (let-cond-var $u $s)
            (push-cond-clauses $s
                (match-prop '$q R:3:0 element-in '$u)
                (member '$u (_ $a))
            )
        )
        (for-each $f ($_ $b)
            (let-cond-var $r $s)
            (push-cond-clauses $s
                (member '$t (_ '$r))
            )
            (let-cond-var $v $s)
            (push-cond-clauses $s
                (match-prop '$r R:3:1 element-in '$v)
                (member '$v (_ $b))
            )
        )
    )
)
