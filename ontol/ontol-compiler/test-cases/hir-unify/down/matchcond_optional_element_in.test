(struct ($a)
    (prop? $a rel@0:0:0
        (matrix (.. @b #u $c))
    )
)

(matrix (.. @d
    (match-struct ($e)
        (prop? $e rel@1:0:0
            element-in (matrix (.. @b #u $c))
        )
    )
))

|$a| (block
    (let-prop [$b $f] ($a rel@0:0:0))
    (match-struct ($g)
        (let-cond-var $e $g)
        (push-cond-clauses $g
            (root '$e)
        )
        (catch (@i)
            (try? @i $b)
            (try? @i $f)
            (let-cond-var $h $g)
            (push-cond-clauses $g
                (match-prop '$e rel@1:0:0 element-in '$h)
            )
            (for-each $b $f ($_ $c)
                (push-cond-clauses $g
                    (member '$h ($c _))
                )
            )
        )
    )
)
