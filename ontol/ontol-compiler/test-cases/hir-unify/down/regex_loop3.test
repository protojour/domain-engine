(match-struct ($d)
    (prop! $d R:1:2
        (regex-seq (@c) def@0:43 ((1 $a)) ((2 $b)))
    )
)

(struct ($e)
    (prop! $e R:1:6
        (matrix
            (.. @c
                (struct ($f)
                    (prop! $f R:1:4 $a)
                )
            )
        )
    )
    (prop! $e R:1:7
        (matrix
            (.. @c
                (struct ($g)
                    (prop! $g R:1:4 $b)
                )
            )
        )
    )
)

|$d| (block
    (let-prop $h ($d R:1:2))
    (let-regex-iter $c ((1 $a)) ((2 $b)) def@0:43 $h)
    (struct ($e)
        (prop! $e R:1:6
            (make-matrix ($i)
                (for-each $c ($j)
                    (catch (@k)
                        (let-tup? @k ($a $_) $j)
                        (insert $i
                            (struct ($f)
                                (prop! $f R:1:4 $a)
                            )
                        )
                    )
                )
            )
        )
        (prop! $e R:1:7
            (make-matrix ($l)
                (for-each $c ($m)
                    (catch (@n)
                        (let-tup? @n ($_ $b) $m)
                        (insert $l
                            (struct ($g)
                                (prop! $g R:1:4 $b)
                            )
                        )
                    )
                )
            )
        )
        (move-rest-attrs $e $d)
    )
)
